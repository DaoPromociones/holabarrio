name: Create/Delete Neon Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}

jobs:
  # Este trabajo genera un nombre de rama consistente y lo pasa a los otros trabajos
  branch-name:
    name: Get Branch Name
    runs-on: ubuntu-latest
    outputs:
      name: preview/pr-${{ github.event.number }}-${{ github.head_ref }}
    steps:
      - run: echo "Branch name will be preview/pr-${{ github.event.number }}-${{ github.head_ref }}"

  create_neon_branch:
    name: Create Neon Branch
    needs: branch-name # Depende del trabajo anterior para obtener el nombre
    if: github.event.action != 'closed'
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: ${{ needs.branch-name.outputs.name }}
          api_key: ${{ secrets.NEON_API_KEY }}
          # --- CORRECCIÓN 1: Especificamos el rol ---
          username: neondb_owner

      - name: Install dependencies
        run: npm i -g pnpm && pnpm install --frozen-lockfile
      
      - name: Run Auth DB Migrations
        run: pnpm prisma migrate deploy --schema=./prisma-auth/schema.prisma
        env:
          # --- Usamos la URL de conexión directa que genera el paso anterior ---
          DATABASE_URL_AUTH_DIRECT: "${{ steps.create_neon_branch.outputs.db_url }}"

  delete_neon_branch:
    name: Delete Neon Branch
    needs: branch-name # Depende del primer trabajo para obtener el nombre
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          # --- CORRECCIÓN 2: Usamos el nombre consistente ---
          branch: ${{ needs.branch-name.outputs.name }}
          api_key: ${{ secrets.NEON_API_KEY }}